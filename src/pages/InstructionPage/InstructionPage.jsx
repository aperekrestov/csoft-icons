import { useEffect } from 'react'
import Header from '@components/Header'
import Footer from '@components/Footer'

import cn from 'classnames'
import styles from './InstructionPage.module.css'

const InstructionPage = () => {
	useEffect(() => {
		window.scrollTo(0, 0)
	}, [])

	return (
		<div className={cn(styles.bg_page_img, "wrapper bg_page")}>
			<Header searchText={""} />

			<div className="content_width_middle padding_top_bottom_l content_height_auto">
				<h2>Рекомендации пользователем</h2>
				<p>Придерживайтесь простых инструкций, которые изложены ниже, чтобы ваш интерфейс выглядел максимально репрезентативно.</p>
				<h3>1. Не изменяйте размер иконки</h3>
				<dl>
					<dt>В коллекции представлены уникальные между размерами файлы одной и тойже иконки:</dt>
					<dd>16x16 px</dd>
					<dd>24x24 px</dd>
					<dd>32x32 px</dd>
				</dl>
				<p>
					Логично было бы предположить, что это один и тот же файл иконки, пропорционально увеличенный / уменьшенный по ширине и высоте.
					В таком случае линии толщиной 1 пиксель иконки 16x16, превратились бы в линии толщиной 1,5 пикселя иконки 24x24 и толщиной 2 пикселя иконки 32x32. На самом деле это не так!
				</p>
				<p>
					Каждый из вышеперечисленных размеров каждой иконки прорисован в редакторе с учетом, что тонкие линии имеют толщину 1 пиксель.
					Поэтому важно использовать оригинальный размер иконок, не меняя его шируну и высоту.
					В противном случае Вы получите некачественное, искаженное отображение иконок.
				</p>

				<h3>2. По возможности используйте векторный вормат</h3>
				<dl>
					<dt>На сайте представленна возможнасть загрузить файл в двух форматах:</dt>
					<dd>SVG — векторный</dd>
					<dd>PNG — растровый</dd>
				</dl>
				<p>Основным форматом, в котором создавалась коллекция иконок, является векторный. Векторный формат качественно отображается на всех типах современных дисплеев.
					Особенно на дисплеях с большей плотностью пикселей.</p>
			</div>

			<Footer />
		</div>
	)
}

export default InstructionPage
